**Updates**:

Python2 has been deprecated, and this will no longer be maintained. Please consider trying my new `rubber` fork that supports Python3 and macOS Catalina: 

https://github.com/oracleyue/rubber-for-python3


--------------------------------


This is Rubber.

Rubber is a building system for LaTeX documents. It is based on a routine that
runs just as many compilations as necessary and runs companion programs like
BibTeX and Makeindex when needed. The module system provides a great
flexibility that virtually allows support for any package with no user
intervention, as well as pre- and post-processing of the document. A good
number of standard packages are supported, including graphics/graphicx with
automatic conversion between various graphics formats and Metapost
compilation. The associated tool "rubber-info" extracts information, such as
dependency relations or post-compilation diagnostics.


* Installation

Running Rubber just requires Python version 2.6 or newer.  Of course it won't
be of much use without a working LaTeX environment (Rubber is known to work on
TeXLive and VTeX on various flavors of Unix including Darwin and Cygwin, any
feedback is welcome about other systems).

For compilation, you will need the Python Distutils, which are usually included
in development packages (in Debian, this is the python-dev package).  To build
the documentation, you need texinfo (Debian package: texinfo).

To compile and install Rubber, just follow the usual procedure:

$ python2 setup.py --help
$ python2 setup.py install
$ python2 setup.py clean --all


Some useful options to setup.py include:

Disabling info docs:

$ python2 setup.py build --info=False install

and similar for --html, --man, --pdf.

Changing the installation path for manpages:

$ python2 setup.py install --mandir=/path/to/man/pages

Installing to a staging directory instead of the root/prefix:

$ python2 setup.py install --root=/staging/directory

Note that if you need build and install to be two different steps
(for example when building packages for distribution purposes),
Python's distutils will forget about any 'build' options, and re-build
with default options during the 'install' stage.  This is worrysome if
you'd like not to build some of the documentation.  It is then best
to make options permanent by putting them info a setup.cfg file.  For
example:

[build]
man = 1
html = 0
pdf = 0
info = 0
txt = 0
[install]
prefix  = /usr

Finally, invoke

$ python2 setup.py build
$ python2 setup.py install --root=/staging/directory


* Usage

As civility requires, saying `rubber --help' and `rubber-info --help' provides
a short description of the command line's syntax. The included manual pages
(available in English and French) and Texinfo documentation contain more
precise usage information.


* Author

Rubber was originally written by Emmanuel Beffara <emmanuel@beffara.org>.
It is currently maintained by Sebastian Kapfer <sebastian.kapfer@fau.de>.

Its homepage can be found at https://launchpad.net/rubber.

Thanks to all those who provided testing, comments and suggestions, and
re-thanks to those who wrote patches and bugfixes.

Any kind of feedback is appreciated, in order to make this program as useful,
robust and powerful as possible.
